#!/bin/bash

_set_vars () {
    MARKS_FILE=~/.bookmarks
    MARKS_FILE_OLD=${MARKS_FILE}.old

    if [ ! -f $MARKS_FILE ]
    then
        touch $MARKS_FILE
    fi
}

_unset_vars () {
    unset MARKS_FILE MARKS_FILE_OLD
}

_marks () {
    local cur prev
    COMPREPLY=()
    echo $COMP_CWORD >> /c/0/bash.log
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD - 1]}
    _set_vars
    if [ $COMP_CWORD -eq 1 ]
    then
        words=`cat $MARKS_FILE | cut -f1`
        COMPREPLY=( $(compgen -W "${words}" -- ${cur}) )
    else
        new_dir=`grep "^$prev" $MARKS_FILE | cut -f 2`
        words=`ls $new_dir`
        COMPREPLY=( $(compgen -W "${words}" -- ${cur}) )
    fi
    unset MARKS_FILE MARKS_FILE_OLD
}

complete -F _marks go
complete -F _marks delmark

_set_vars

if [ ! -f $MARKS_FILE ]
then
    touch $MARKS_FILE
fi

_unset_vars

alias po='popd'

go () {
    name=$1
    _set_vars
    new_dir=`grep "^$name" $MARKS_FILE | cut -f 2`
    if [ "$new_dir" != "" ]
    then
        pushd $new_dir/$2 > /dev/null
    elif [ -d $name ]
    then
        pushd $name > /dev/null
    else
        echo "Bookmark '$name' has not been set."
    fi
    _unset_vars
}

delmark () {
    _set_vars

    name=$1

    if [ "" == "$name" ]
    then
        # Get dir and escape slashes:
        dir=${PWD//\//\\\/}
        sed -i.old "/.*\t${dir}/d" $MARKS_FILE
    else 
        sed -i.old "/^${name}\t/d" $MARKS_FILE
    fi

    _unset_vars
}

mark () {
    name=${1:-${PWD##*/}}
    delmark $name
    _set_vars
    echo -e "${name}\t`pwd`" >> $MARKS_FILE
    _unset_vars
}

marks () {
    _set_vars
    cat $MARKS_FILE | sort
    _unset_vars
}
